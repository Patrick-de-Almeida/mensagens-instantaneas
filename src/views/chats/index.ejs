<div class="row">
    <div class="col-12 mb-4">
        <div class="d-flex justify-content-between align-items-center">
            <h1>Meus Chats</h1>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#newChatModal">
                <i class="bi bi-plus-circle"></i> Novo Chat
            </button>
        </div>
    </div>

    <% if (chats && chats.length> 0) { %>
        <div class="col-md-12">
            <div class="list-group">
                <% chats.forEach(chat=> { %>
                    <a href="/chats/<%= chat._id %>"
                        class="list-group-item list-group-item-action d-flex justify-content-between align-items-center">
                        <div>
                            <% if (chat.isGroup) { %>
                                <h5 class="mb-1"><i class="bi bi-people-fill me-2"></i>
                                    <%= chat.name %>
                                </h5>
                                <small>
                                    <%= chat.participants.length %> participantes
                                </small>
                                <% } else { %>
                                    <% // Encontrar o outro participante (não o usuário atual) const
                                        otherParticipant=chat.participants.find(p=> p._id.toString() !==
                                        currentUser._id.toString());
                                        const name = otherParticipant ? otherParticipant.name : 'Desconhecido';
                                        const status = otherParticipant ? otherParticipant.status : 'offline';
                                        %>
                                        <h5 class="mb-1">
                                            <i class="bi bi-circle-fill me-2 text-<%= status === 'online' ? 'success' : (status === 'away' ? 'warning' : 'secondary') %>"
                                                style="font-size: 0.7rem;"></i>
                                            <%= name %>
                                        </h5>
                                        <small>
                                            <%= status==='online' ? 'Online' : (status==='away' ? 'Ausente' : 'Offline'
                                                ) %>
                                        </small>
                                        <% } %>
                        </div>

                        <% if (unreadCounts && unreadCounts[chat._id]) { %>
                            <span class="badge bg-primary rounded-pill">
                                <%= unreadCounts[chat._id] %>
                            </span>
                            <% } %>
                    </a>
                    <% }) %>
            </div>
        </div>
        <% } else { %>
            <div class="col-12">
                <div class="alert alert-info">
                    <p class="mb-0">Você ainda não tem nenhum chat. Crie um novo chat para começar a conversar.</p>
                </div>
            </div>
            <% } %>
</div>

<!-- Modal para Novo Chat -->
<div class="modal fade" id="newChatModal" tabindex="-1" aria-labelledby="newChatModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="newChatModalLabel">Novo Chat</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Fechar"></button>
            </div>
            <div class="modal-body">
                <ul class="nav nav-tabs" id="chatTypeTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="individual-tab" data-bs-toggle="tab"
                            data-bs-target="#individual" type="button" role="tab" aria-controls="individual"
                            aria-selected="true">Chat Individual</button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="group-tab" data-bs-toggle="tab" data-bs-target="#group"
                            type="button" role="tab" aria-controls="group" aria-selected="false">Grupo</button>
                    </li>
                </ul>

                <div class="tab-content mt-3" id="chatTypeTabsContent">
                    <div class="tab-pane fade show active" id="individual" role="tabpanel"
                        aria-labelledby="individual-tab">
                        <form id="individualChatForm">
                            <div class="mb-3">
                                <label for="username" class="form-label">Nome de Usuário</label>
                                <div class="input-group">
                                    <input type="text" class="form-control" id="username"
                                        placeholder="Digite o nome de usuário">
                                    <button class="btn btn-outline-secondary" type="button"
                                        id="searchUserBtn">Buscar</button>
                                </div>
                                <div id="userSearchResult" class="mt-2"></div>
                            </div>
                            <input type="hidden" id="selectedUserId">
                        </form>
                    </div>

                    <div class="tab-pane fade" id="group" role="tabpanel" aria-labelledby="group-tab">
                        <form id="groupChatForm">
                            <div class="mb-3">
                                <label for="groupName" class="form-label">Nome do Grupo</label>
                                <input type="text" class="form-control" id="groupName" required>
                            </div>

                            <div class="mb-3">
                                <label class="form-label">Participantes</label>
                                <div class="input-group mb-2">
                                    <input type="text" class="form-control" id="groupUsername"
                                        placeholder="Digite o nome de usuário">
                                    <button class="btn btn-outline-secondary" type="button"
                                        id="addParticipantBtn">Adicionar</button>
                                </div>
                                <div id="groupParticipants" class="mt-2">
                                    <!-- Participantes serão adicionados aqui -->
                                </div>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="createChatBtn">Criar Chat</button>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Buscar usuário
        document.getElementById('searchUserBtn').addEventListener('click', function () {
            const username = document.getElementById('username').value;
            if (!username) return;

            fetch(`/users/search?username=${encodeURIComponent(username)}`)
                .then(response => response.json())
                .then(data => {
                    const resultDiv = document.getElementById('userSearchResult');
                    if (data.success) {
                        resultDiv.innerHTML = `
              <div class="alert alert-success">
                <div class="d-flex justify-content-between align-items-center">
                  <div>
                    <strong>${data.user.name}</strong> (${data.user.username})
                  </div>
                  <button class="btn btn-sm btn-success select-user" data-id="${data.user._id}">Selecionar</button>
                </div>
              </div>
            `;

                        // Adicionar evento para selecionar usuário
                        document.querySelectorAll('.select-user').forEach(btn => {
                            btn.addEventListener('click', function () {
                                document.getElementById('selectedUserId').value = this.dataset.id;
                                resultDiv.innerHTML = `<div class="alert alert-info">Usuário selecionado</div>`;
                            });
                        });
                    } else {
                        resultDiv.innerHTML = `<div class="alert alert-danger">Usuário não encontrado</div>`;
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                });
        });

        // Criar chat
        document.getElementById('createChatBtn').addEventListener('click', function () {
            const activeTab = document.querySelector('.tab-pane.active').id;

            if (activeTab === 'individual') {
                const selectedUserId = document.getElementById('selectedUserId').value;
                if (!selectedUserId) {
                    alert('Selecione um usuário primeiro');
                    return;
                }

                createChat({
                    participants: [selectedUserId],
                    isGroup: false
                });
            } else {
                const groupName = document.getElementById('groupName').value;
                if (!groupName) {
                    alert('Digite um nome para o grupo');
                    return;
                }

                const participantIds = [];
                document.querySelectorAll('#groupParticipants .participant-item').forEach(item => {
                    participantIds.push(item.dataset.id);
                });

                if (participantIds.length === 0) {
                    alert('Adicione pelo menos um participante');
                    return;
                }

                createChat({
                    participants: participantIds,
                    name: groupName,
                    isGroup: true
                });
            }
        });

        function createChat(chatData) {
            fetch('/chats', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(chatData),
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        window.location.href = `/chats/${data.chat._id}`;
                    } else {
                        alert('Erro ao criar chat: ' + data.error.message);
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao criar chat');
                });
        }
    });
</script>